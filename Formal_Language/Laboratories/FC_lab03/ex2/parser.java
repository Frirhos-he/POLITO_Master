
//----------------------------------------------------
// The following code was generated by CUP v0.11b beta 20140226
//----------------------------------------------------

import java_cup.runtime.*;
import java_cup.runtime.XMLElement;

/** CUP v0.11b beta 20140226 generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\024\000\002\002\004\000\002\002\006\000\002\004" +
    "\007\000\002\004\010\000\002\005\005\000\002\005\003" +
    "\000\002\010\007\000\002\010\012\000\002\010\013\000" +
    "\002\012\004\000\002\012\004\000\002\012\004\000\002" +
    "\012\004\000\002\012\004\000\002\003\004\000\002\003" +
    "\003\000\002\006\006\000\002\007\005\000\002\007\003" +
    "\000\002\011\004" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\057\000\004\013\004\001\002\000\004\005\056\001" +
    "\002\000\006\006\011\013\010\001\002\000\004\002\007" +
    "\001\002\000\004\002\001\001\002\000\004\005\027\001" +
    "\002\000\004\006\012\001\002\000\004\013\013\001\002" +
    "\000\004\011\017\001\002\000\006\002\ufff2\013\ufff2\001" +
    "\002\000\006\002\000\013\013\001\002\000\006\002\ufff3" +
    "\013\ufff3\001\002\000\004\016\022\001\002\000\006\007" +
    "\025\010\024\001\002\000\006\007\uffef\010\uffef\001\002" +
    "\000\004\012\023\001\002\000\006\007\uffee\010\uffee\001" +
    "\002\000\006\002\ufff1\013\ufff1\001\002\000\004\016\022" +
    "\001\002\000\006\007\ufff0\010\ufff0\001\002\000\004\004" +
    "\030\001\002\000\004\012\031\001\002\000\004\011\037" +
    "\001\002\000\006\007\ufffc\010\ufffc\001\002\000\006\007" +
    "\035\010\034\001\002\000\006\006\ufffe\013\ufffe\001\002" +
    "\000\004\012\031\001\002\000\006\007\ufffd\010\ufffd\001" +
    "\002\000\004\013\040\001\002\000\004\011\041\001\002" +
    "\000\004\014\042\001\002\000\010\007\ufffb\010\ufffb\011" +
    "\043\001\002\000\006\017\046\020\045\001\002\000\004" +
    "\014\054\001\002\000\006\022\053\023\052\001\002\000" +
    "\010\021\047\022\051\023\050\001\002\000\004\014\ufff4" +
    "\001\002\000\004\014\ufff5\001\002\000\004\014\ufff6\001" +
    "\002\000\004\014\ufff7\001\002\000\004\014\ufff8\001\002" +
    "\000\010\007\ufffa\010\ufffa\015\055\001\002\000\006\007" +
    "\ufff9\010\ufff9\001\002\000\004\004\057\001\002\000\004" +
    "\012\031\001\002\000\006\007\035\010\061\001\002\000" +
    "\006\006\uffff\013\uffff\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\057\000\006\002\005\004\004\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\003\014\006" +
    "\013\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\006\015\001\001\000\002\001\001\000\006\007\017\011" +
    "\020\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\011" +
    "\025\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\005\032\010\031\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\010\035" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\012\043" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\005\057\010\031" +
    "\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}


  /** User initialization code. */
  public void user_init() throws java.lang.Exception
    {
 Tree = new DisegnaAlbero();   }public static DisegnaAlbero Tree;

  /** Scan to get the next Symbol. */
  public java_cup.runtime.Symbol scan()
    throws java.lang.Exception
    {
 Symbol s=_scanner.next_token(); Tree.push(s.toString(), 0); return s;   }



    public void report_error(String message, Object info) {
        System.err.print("ERROR: Syntax error");
        if (info instanceof Symbol)
            if (((Symbol)info).left != -1){
                int line = (((Symbol)info).left)+1;
                int column = (((Symbol)info).right)+1;
                System.err.print(" (linea "+line+", colonna "+column+"): ");
            } else System.err.print(": ");
        else System.err.print(": ");
    }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {
  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= prog EOF 
            { 
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // prog ::= writer_books PERC PERC second_sect 
            { parser.Tree.reduce(4,"prog",0);
              Object RESULT =null;
		System.out.println("syntax of the subset is correct");
              CUP$parser$result = parser.getSymbolFactory().newSymbol("prog",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // writer_books ::= APICSNAME MINUS MAJ book_list SEM 
            { parser.Tree.reduce(5,"writer_books",0);
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("writer_books",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // writer_books ::= writer_books APICSNAME MINUS MAJ book_list SEM 
            { parser.Tree.reduce(6,"writer_books",0);
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("writer_books",2, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // book_list ::= book_list COMM book 
            { parser.Tree.reduce(3,"book_list",0);
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("book_list",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // book_list ::= book 
            { parser.Tree.reduce(1,"book_list",0);
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("book_list",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // book ::= ISBN_code COL APICSNAME COL N 
            { parser.Tree.reduce(5,"book",0);
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("book",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // book ::= ISBN_code COL APICSNAME COL N COL let_gen N 
            { parser.Tree.reduce(8,"book",0);
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("book",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // book ::= ISBN_code COL APICSNAME COL N COL let_gen N LETTER 
            { parser.Tree.reduce(9,"book",0);
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("book",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // let_gen ::= LI AV 
            { parser.Tree.reduce(2,"let_gen",0);
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("let_gen",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // let_gen ::= LI SO 
            { parser.Tree.reduce(2,"let_gen",0);
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("let_gen",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // let_gen ::= LS AV 
            { parser.Tree.reduce(2,"let_gen",0);
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("let_gen",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // let_gen ::= LS SO 
            { parser.Tree.reduce(2,"let_gen",0);
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("let_gen",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // let_gen ::= LS BO 
            { parser.Tree.reduce(2,"let_gen",0);
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("let_gen",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // second_sect ::= second_sect userloan 
            { parser.Tree.reduce(2,"second_sect",1);
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("second_sect",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // second_sect ::= userloan 
            { parser.Tree.reduce(1,"second_sect",1);
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("second_sect",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // userloan ::= APICSNAME COL loan_list SEM 
            { parser.Tree.reduce(4,"userloan",0);
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("userloan",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // loan_list ::= loan_list COMM loan 
            { parser.Tree.reduce(3,"loan_list",0);
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("loan_list",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // loan_list ::= loan 
            { parser.Tree.reduce(1,"loan_list",0);
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("loan_list",5, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // loan ::= DATE ISBN_code 
            { parser.Tree.reduce(2,"loan",0);
              Object RESULT =null;

              CUP$parser$result = parser.getSymbolFactory().newSymbol("loan",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}
